import { FormEvent, useState } from 'react'
import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState('');
  const [error, setError] = useState('');

  const handleSubmit = async (event: FormEvent) => {
    // Stop the form from submitting and refreshing the page.
    event.preventDefault()

    setLoading(true)
    setResult('');
    setError('');

    // Cast the event target to an html form
    const form = event.target as HTMLFormElement

    // Get data from the form.
    const data = {'product': form.product.value as string}

    // Send the form data to our API and get a response.
    const response = await fetch('/api/ex1', {
      // Body of the request is the JSON data we created above.
      body: JSON.stringify(data),
      // Tell the server we're sending JSON.
      headers: {
        'Content-Type': 'application/json',
      },
      // The method is POST because we are sending data.
      method: 'POST',
    })

    // Get the response data from server as JSON.
    // If server returns the name submitted, that means the form works.
    const result = await response.json()
    console.log(result);
    setLoading(false);
    if (result.error) {
      setError(result.error);
      return;
    }
    setResult(result.output);    
  }

  return (
    <>
      <Head>
        <title>LangChain example client 1</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div className={styles.card}>
          <form onSubmit={handleSubmit}>
            <div>Enter a description of a product, e.g. &quot;colorful socks&quot;</div>
            <div>
              <input className={styles.input} type="text" id="product" name="product" required />
            </div>
            <div>
              <button
                type="submit"
                disabled={loading}
                className={styles.button}>Submit</button>
            </div>
          </form>
        </div>
        <div className={styles.card}>
          {error ? <p style={{color:'red'}}>{error}</p> : ''}
          {loading ? 'waiting for response...' : result}
        </div>
      </main>
    </>
  )
}
